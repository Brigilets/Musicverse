{"version":3,"sources":["actions/types.js","actions/errorActions.js","actions/itemActions.js","actions/authActions.js","components/auth/registerModal.js","components/auth/logout.js","components/auth/loginModal.js","components/AppNavbar.js","components/AddItem.js","components/Footer.js","actions/cartActions.js","components/Tickets.js","components/Checkout.js","actions/orderActions.js","components/Cart.js","components/Order.js","assests/frontPage2optimised.jpg","components/Home.js","components/Lineup.js","assests/Optimized-philosophy.jpg","components/Philosophy.js","components/Contact.js","components/Faq.js","components/Main.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","UPDATE_ITEM","ITEMS_LOADING","CART_LOADING","GET_CART","ADD_TO_CART","DELETE_FROM_CART","ORDERS_LOADING","GET_ORDERS","CHECKOUT","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","returnErrors","msg","status","id","type","payload","clearErrors","setItemsLoading","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","className","color","onClick","href","isOpen","for","placeholder","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","Logout","logout","to","LoginModal","user","login","navLinks","navlink","title","NavListItem","navLink","AppNavbar","authLinks","map","link","key","guestLinks","dark","expand","navbar","AddItem","description","price","a","newItem","addItem","alert","item","console","log","Footer","fixed","getCart","setCartLoading","get","Tickets","loaded","isItemInCart","itemId","cartItems","itemInCart","find","cartItem","productId","onAddToCart","addToCart","getItems","items","tag","size","bind","_id","cart","quantity","onToken","checkout","history","Checkout","amount","currency","stripeKey","process","setOrdersLoading","Cart","getCartItems","onDeleteFromCart","deleteFromCart","loading","total","userId","delete","source","push","withRouter","Orders","orders","ongetOrders","getOrders","order","length","Home","styles","overflow","inverse","src","mainPic","alt","lineup","LineUp","artist","Philosophy","coverPic","Contact","form","useRef","inline","emailjs","sendForm","current","result","text","FAQ","useState","setIsOpen","item_names","list_name","lists","list","path","Order","initialState","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAAaA,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAgB,gBAChBC,EAAe,eACfC,EAAW,WACXC,EAAc,cACdC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAa,aACbC,EAAW,WACXC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAa,aACbC,EAAe,eClBfC,EAAe,SAACC,EAAKC,GAAuB,IAAfC,EAAc,uDAAT,KAC3C,MAAO,CACHC,KAAMN,EACNO,QAAS,CAAEJ,MAAKC,SAAQC,QAKnBG,EAAc,WACvB,MAAO,CACHF,KAAML,IC8BDQ,EAAkB,WAC3B,MAAM,CACFH,KAAMtB,ICiCD0B,EAAc,SAAAC,GAEvB,IAAMC,EAAQD,IAAWE,KAAKD,MAGxBE,EAAS,CACXC,QAAQ,CACJ,eAAgB,qBAQxB,OAJGH,IACCE,EAAOC,QAAQ,gBAAkBH,GAG9BE,G,eC3ELE,E,4MACFC,MAAQ,CACJC,OAAO,EACPC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVlB,IAAK,M,EA8BTmB,OAAS,WAEL,EAAKC,MAAMf,cACX,EAAKgB,SAAS,CACVN,OAAQ,EAAKD,MAAMC,S,EAI3BO,SAAW,SAACC,GACR,EAAKF,SAAL,eAAgBE,EAAEC,OAAOR,KAAMO,EAAEC,OAAOC,S,EAG5CC,SAAW,SAACH,GACRA,EAAEI,iBAEF,MAAkC,EAAKb,MAGjCc,EAAU,CAAEZ,KAHlB,EAAQA,KAGgBC,MAHxB,EAAcA,MAGiBC,SAH/B,EAAqBA,UAMrB,EAAKE,MAAMS,SAASD,I,wDAzCxB,SAAmBE,GACf,MAAmCC,KAAKX,MAAhCY,EAAR,EAAQA,MAAOC,EAAf,EAAeA,gBACZD,IAAUF,EAAUE,QAEH,kBAAbA,EAAM9B,GACL6B,KAAKV,SAAS,CAACrB,IAAKgC,EAAMhC,IAAIA,MAG9B+B,KAAKV,SAAS,CAACrB,IAAI,QAKxB+B,KAAKjB,MAAMC,OACPkB,GACCF,KAAKZ,W,oBA+BjB,WACI,OACI,sBAAKe,UAAU,YAAf,UACI,cAAC,IAAD,CAAQC,MAAM,OAAOD,UAAU,iCAA/B,SAAgE,cAAC,IAAD,CAASE,QAASL,KAAKZ,OAAQkB,KAAK,IAApC,SAAwC,sBAAMH,UAAU,sBAAhB,SAAsC,+CAC9I,eAAC,IAAD,CACII,OAAQP,KAAKjB,MAAMC,MACnBI,OAAQY,KAAKZ,OAFjB,UAII,cAAC,IAAD,CAAaA,OAAQY,KAAKZ,OAA1B,sBAGA,eAAC,IAAD,WACKY,KAAKjB,MAAMd,IAAO,cAAC,IAAD,CAAOmC,MAAM,SAAb,SAAuBJ,KAAKjB,MAAMd,MAAc,KACnE,cAAC,IAAD,CAAM0B,SAAUK,KAAKL,SAArB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,IAAI,OAAX,kBACA,cAAC,IAAD,CACIpC,KAAK,OACLa,KAAK,OACLd,GAAG,OACHsC,YAAY,OACZN,UAAU,OACVZ,SAAUS,KAAKT,WAEnB,cAAC,IAAD,CAAOiB,IAAI,QAAX,mBACA,cAAC,IAAD,CACIpC,KAAK,QACLa,KAAK,QACLd,GAAG,QACHsC,YAAY,QACZN,UAAU,OACVZ,SAAUS,KAAKT,WAEnB,cAAC,IAAD,CAAOiB,IAAI,WAAX,sBACA,cAAC,IAAD,CACIpC,KAAK,WACLa,KAAK,WACLd,GAAG,WACHsC,YAAY,WACZN,UAAU,OACVZ,SAAUS,KAAKT,WAEnB,cAAC,IAAD,CACIa,MAAM,OACNM,MAAO,CAACC,UAAW,QACnBR,UAAU,WACVS,OAAK,EAJT,wC,GAxGJC,aA4HbC,eALS,SAAC/B,GAAD,MAAY,CAChCmB,gBAAiBnB,EAAMJ,KAAKuB,gBAC5BD,MAAOlB,EAAMkB,SAGsB,CAACH,SDxHhB,SAAC,GAAD,IAAEb,EAAF,EAAEA,KAAMC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAf,OAA6B,SAAA4B,GAEjD,IAOMC,EAAOC,KAAKC,UAAU,CAACjC,OAAMC,QAAOC,aAE1CgC,IAAMC,KAAK,gBAAgBJ,EATZ,CACXnC,QAAS,CACL,eAAgB,sBAQnBwC,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClB3C,KAAMR,EACNS,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GACHV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,OAAQ,kBAC9D6C,EAAS,CACL3C,KAAMP,SCqG4BS,eAAnCwC,CAAiDhC,G,QCtInD6C,EAAb,4JAKI,WACI,OACI,8BACI,cAAC,WAAD,UAChB,cAAC,IAAD,CAAStB,QAASL,KAAKX,MAAMuC,OAAQtB,KAAK,IAA1C,SAA8C,cAAC,IAAD,CAAMuB,GAAG,QAAT,SAAiB,sBAAM1B,UAAU,0BAAhB,SAA0C,qDATzG,GAA4BU,aAgBbC,cAAQ,KAAK,CAACc,OF8CP,WAClB,MAAO,CACHxD,KAAMT,KEhDCmD,CAAuBa,GCLhCG,E,4MACF/C,MAAQ,CACJC,OAAO,EACPE,MAAO,GACPC,SAAU,GACVlB,IAAK,M,EA8BTmB,OAAS,WAEL,EAAKC,MAAMf,cACX,EAAKgB,SAAS,CACVN,OAAQ,EAAKD,MAAMC,S,EAI3BO,SAAW,SAACC,GACR,EAAKF,SAAL,eAAgBE,EAAEC,OAAOR,KAAMO,EAAEC,OAAOC,S,EAG5CC,SAAW,SAACH,GACRA,EAAEI,iBAEF,MAA0B,EAAKb,MACzBgD,EAAO,CAAC7C,MADd,EAAOA,MACcC,SADrB,EAAcA,UAId,EAAKE,MAAM2C,MAAMD,I,wDAvCrB,SAAmBhC,GACf,MAAmCC,KAAKX,MAAhCY,EAAR,EAAQA,MAAOC,EAAf,EAAeA,gBACZD,IAAUF,EAAUE,QAEH,eAAbA,EAAM9B,GACL6B,KAAKV,SAAS,CAACrB,IAAKgC,EAAMhC,IAAIA,MAG9B+B,KAAKV,SAAS,CAACrB,IAAI,QAKxB+B,KAAKjB,MAAMC,OACPkB,GACCF,KAAKZ,W,oBA2BjB,WACI,OACI,sBAAKe,UAAU,YAAf,UACI,cAAC,IAAD,CAAQC,MAAM,OAAOD,UAAU,iCAA/B,SAAgE,cAAC,IAAD,CAASE,QAASL,KAAKZ,OAAQkB,KAAK,IAApC,SAAwC,sBAAMH,UAAU,sBAAhB,SAAsC,4CAC9I,eAAC,IAAD,CACII,OAAQP,KAAKjB,MAAMC,MACnBI,OAAQY,KAAKZ,OAFjB,UAII,cAAC,IAAD,CAAaA,OAAQY,KAAKZ,OAA1B,mBAGA,eAAC,IAAD,WACKY,KAAKjB,MAAMd,IAAO,cAAC,IAAD,CAAOmC,MAAM,SAAb,SAAuBJ,KAAKjB,MAAMd,MAAc,KACnE,cAAC,IAAD,CAAM0B,SAAUK,KAAKL,SAArB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,IAAI,QAAX,mBACA,cAAC,IAAD,CACIpC,KAAK,QACLa,KAAK,QACLd,GAAG,QACHsC,YAAY,QACZN,UAAU,OACVZ,SAAUS,KAAKT,WAEnB,cAAC,IAAD,CAAOiB,IAAI,WAAX,sBACA,cAAC,IAAD,CACIpC,KAAK,WACLa,KAAK,WACLd,GAAG,WACHsC,YAAY,WACZN,UAAU,OACVZ,SAAUS,KAAKT,WAEnB,cAAC,IAAD,CACIa,MAAM,OACNM,MAAO,CAACC,UAAW,QACnBR,UAAU,WACVS,OAAK,EAJT,qC,GA1FPC,aA8GVC,eALS,SAAC/B,GAAD,MAAY,CAChCmB,gBAAiBnB,EAAMJ,KAAKuB,gBAC5BD,MAAOlB,EAAMkB,SAGsB,CAAC+B,MHnFnB,SAAC,GAAD,IAAE9C,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAAuB,SAAA4B,GAExC,IAOMC,EAAOC,KAAKC,UAAU,CAAChC,QAAOC,aAEpCgC,IAAMC,KAAK,aAAaJ,EATT,CACXnC,QAAS,CACL,eAAgB,sBAQnBwC,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClB3C,KAAMX,EACNY,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GACHV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,OAAQ,eAC9D6C,EAAS,CACL3C,KAAMV,SGgEyBY,eAAhCwC,CAA8CgB,GC/GvDG,EAAW,CACb,CAAEC,QAAS,QAASC,MAAO,OAAQhC,UAAW,sBAC9C,CAAE+B,QAAS,UAAWC,MAAO,SAAUhC,UAAW,WAClD,CAAE+B,QAAS,WAAYC,MAAO,UAAWhC,UAAW,WACpD,CAAE+B,QAAS,QAASC,MAAO,OAAQhC,UAAW,WAC9C,CAAE+B,QAAS,UAAWC,MAAO,SAAUhC,UAAW,gBAClD,CAAC+B,QAAS,cAAeC,MAAO,aAAchC,UAAW,WACzD,CAAC+B,QAAS,OAAQC,MAAO,QAAShC,UAAW,YAIzCiC,GAAc,SAAC,GAAD,IAAGjC,EAAH,EAAGA,UAAWkC,EAAd,EAAcA,QAASF,EAAvB,EAAuBA,MAAvB,OAClB,cAAC,IAAD,CAAMN,GAAIQ,EAAV,SACA,cAAC,IAAD,CAASlC,UAAWA,EAApB,SACIgC,OAKFG,G,4MACJvD,MAAQ,CACNwB,QAAQ,G,EAOVnB,OAAS,WACP,EAAKE,SAAS,CACZiB,QAAS,EAAKxB,MAAMwB,U,4CAKxB,WACE,MAAkCP,KAAKX,MAAMV,KAArCuB,EAAR,EAAQA,gBAGFqC,GAHN,EAAyBR,KAIvB,eAAC,WAAD,WACKE,EAASO,KAAI,SAACC,EAAMC,GAAP,OACd,cAAC,GAAD,CAAuBvC,UAAWsC,EAAKtC,UAAWkC,QAASI,EAAKP,QAASC,MAAOM,EAAKN,OAAnEO,MAGpB,cAAC,IAAD,UACE,cAAC,EAAD,UAKAC,EACJ,eAAC,WAAD,WACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,SAKN,OACE,8BACE,cAAC,IAAD,CACCC,MAAI,EACHC,OAAO,KACP1C,UAAU,uBAHZ,SAKE,eAAC,IAAD,WACE,cAAC,IAAD,CAAaA,UAAU,QAAQG,KAAK,QAApC,wBAGA,cAAC,IAAD,CAAeD,QAASL,KAAKZ,SAC7B,cAAC,IAAD,CAAUmB,OAAQP,KAAKjB,MAAMwB,OAAQuC,QAAM,EAA3C,SACE,cAAC,IAAD,CAAK3C,UAAU,UAAUC,MAAM,QAAQ0C,QAAM,EAA7C,SACG5C,EAAkBqC,EAAYI,iB,GAzDvB9B,aAuETC,gBAJS,SAAC/B,GAAD,MAAY,CAClCJ,KAAMI,EAAMJ,QAG0B,KAAzBmC,CAA+BwB,ICpGxCS,G,4MACFhE,MAAQ,CACJoD,MAAO,GACPa,YAAa,GACbC,MAAO,I,EAOX1D,SAAW,SAACC,GACR,EAAKF,SAAL,eAAgBE,EAAEC,OAAOR,KAAMO,EAAEC,OAAOC,S,EAG5CC,S,uCAAW,WAAOH,GAAP,eAAA0D,EAAA,6DACP1D,EAAEI,iBAEIuD,EAAU,CACZhB,MAAO,EAAKpD,MAAMoD,MAClBa,YAAa,EAAKjE,MAAMiE,YACxBC,MAAO,EAAKlE,MAAMkE,OANf,SASD,EAAK5D,MAAM+D,QAAQD,GATlB,OAWPE,MAAM,2BAXC,2C,kGAcX,WACI,OACI,gCACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,oBAAIlD,UAAU,mBAAd,4BACEH,KAAKX,MAAMa,gBACb,cAAC,IAAD,CAAMP,SAAUK,KAAKL,SAArB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,IAAI,QAAX,mBACA,cAAC,IAAD,CACIpC,KAAK,OACLa,KAAK,QACLd,GAAG,QACHsC,YAAY,oBACZlB,SAAUS,KAAKT,WAEnB,uBACA,cAAC,IAAD,CAAOiB,IAAI,cAAX,yBACA,cAAC,IAAD,CACIpC,KAAK,OACLa,KAAK,cACLd,GAAG,cACHsC,YAAY,0BACZlB,SAAUS,KAAKT,WAEnB,uBACA,cAAC,IAAD,CAAOiB,IAAI,QAAX,mBACA,cAAC,IAAD,CACIpC,KAAK,SACLa,KAAK,QACLd,GAAG,QACHsC,YAAY,oBACZlB,SAAUS,KAAKT,WAGnB,cAAC,IAAD,CACIa,MAAM,OACNM,MAAO,CAACC,UAAW,QACnBC,OAAK,EAHT,2BAOR,cAAC,IAAD,CAAOT,UAAU,cAAcC,MAAM,SAArC,2C,GAxEES,aAqFPC,gBALS,SAAC/B,GAAD,MAAY,CAChCuE,KAAMvE,EAAMuE,KACZpD,gBAAiBnB,EAAMJ,KAAKuB,mBAGO,CAACkD,QN9EjB,SAACE,GAAD,OAAU,SAACvC,GAC9BI,IAAMC,KAAK,SAAUkC,GAChBjC,MAAK,SAAAC,GAAQiC,QAAQC,IAAI,kBAAkBlC,GAC5CP,EAAS,CACL3C,KAAMzB,EACN0B,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GAAG,OAAIV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,eMuE7D4C,CAAmCiC,IC1F5CU,G,4JACH,WACC,OACC,8BACG,cAAC,IAAD,CAASC,MAAM,SAASvD,UAAU,gCAAlC,mC,GAJaU,aAaN4C,MCZFE,GAAU,SAACxF,GAAD,OAAQ,SAAC4C,GAC9BA,EAAS6C,MACTzC,IACG0C,IADH,gBACgB1F,IACbkD,MAAK,SAACC,GAASiC,QAAQC,IAAI,mBAAoBlC,GAC9CP,EAAS,CACP3C,KAAMpB,EACNqB,QAASiD,EAAIC,UAGhBC,OAAM,SAACC,GAAD,OACLV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,cAgC/C0F,GAAiB,WAC5B,MAAO,CACLxF,KAAMrB,IC9BJ+G,I,kNACJ/E,MAAQ,CACNgF,QAAQ,G,EAOVC,aAAe,SAACC,EAAQC,GACtBX,QAAQC,IAAI,sBAAuBS,GACnCV,QAAQC,IAAI,yBAA0BU,GAEtC,IAAMC,EAAaD,EAAUE,MAC3B,SAACC,GAAD,OAAcA,EAASC,YAAcL,KAGvC,OADAV,QAAQC,IAAI,4BAA6BW,GACrCA,EACK,gBAEF,e,EAGTI,Y,uCAAc,WAAOpG,EAAImG,GAAX,SAAApB,EAAA,sEACN,EAAK7D,MAAMmF,UAAUrG,EAAImG,EAAW,GAD9B,2C,+GAlBd,WACEtE,KAAKX,MAAMoF,a,oBAqBb,WAAU,IAAD,OACD1C,EAAO/B,KAAKX,MAAM0C,KAChB2C,EAAU1E,KAAKX,MAAMiE,KAArBoB,MAER,OADAnB,QAAQC,IAAI,eAAgBxD,KAAKX,OAE/B,sBAAKc,UAAU,sBAAf,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAWA,UAAU,WAArB,SACE,qBAAKA,UAAU,WAAf,SACGuE,EAAMlC,KAAI,SAACc,GAAD,OACT,qBAAsBnD,UAAU,qBAAhC,SACE,cAAC,IAAD,CAAMA,UAAU,qBAAhB,SACE,eAAC,IAAD,CAAUA,UAAU,OAApB,UACE,cAAC,IAAD,CAAWwE,IAAI,KAAf,SAAqBrB,EAAKnB,QAC1B,eAAC,IAAD,CAAcwC,IAAI,KAAlB,cAA0BrB,EAAKL,MAA/B,YACC,EAAK5D,MAAMa,gBACV,cAAC,IAAD,CACEE,MAAM,OACNwE,KAAK,KACLvE,QAAS,EAAKkE,YAAYM,KACxB,EACA9C,EAAK+C,IACLxB,EAAKwB,KANT,SASI,EAAKzF,MAAM0F,KAAKA,KAEd,EAAKf,aACHV,EAAKwB,IACL,EAAKzF,MAAM0F,KAAKA,KAAKL,OAHvB,gBAMJ,WAtBApB,EAAKnB,cA6BrB,cAAC,GAAD,W,GAlEctB,cAyFPC,gBAPS,SAAC/B,GAAD,MAAY,CAClCuE,KAAMvE,EAAMuE,KACZpD,gBAAiBnB,EAAMJ,KAAKuB,gBAC5B6B,KAAMhD,EAAMJ,KAAKoD,KACjBgD,KAAMhG,EAAMgG,QAG0B,CAAEN,STxGlB,kBAAM,SAAA1D,GAC1BA,EAASxC,KACT4C,IAAM0C,IAAI,UACLxC,MAAK,SAAAC,GACF,OADUiC,QAAQC,IAAI,cAAelC,GAC9BP,EAAS,CAChB3C,KAAM1B,EACN2B,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GAAG,OAAIV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,cSgGxBsG,UDzF3B,SAACrG,EAAImG,EAAWU,GAAhB,OAA6B,SAACjE,GACrDI,IACGC,KADH,gBACiBjD,GAAM,CAAEmG,YAAWU,aACjC3D,MAAK,SAACC,GAAQiC,QAAQC,IAAI,kBAAkBlC,GAC3CP,EAAS,CACP3C,KAAMnB,EACNoB,QAASiD,EAAIC,UAGhBC,OAAM,SAACC,GAAD,OACLV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,cC+EGyF,YAAhD7C,CACbgD,I,6BCzGImB,GAAU,SAAClD,EAAMmD,EAAUC,GAAjB,OAA6B,SAACzG,GAC7C,IACGwG,EAASnD,EAAMrD,EAAMP,GAAIgH,GAC3B,MAAM1D,GACR8B,QAAQtD,MAAMwB,MAaC2D,GATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQtD,EAAX,EAAWA,KAAMmD,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,QAA3B,OACf,cAAC,KAAD,CACEE,OAAiB,IAATA,EACR3G,MAAOuG,GAAQlD,EAAMmD,EAAUC,GAC/BG,SAAS,MACTC,UAfuBC,iHCyBdC,GAAmB,WAC5B,MAAM,CACFrH,KAAMjB,ICRRuI,G,4MACJ3G,MAAQ,CACNgF,QAAQ,G,EAaV4B,a,uCAAe,WAAOxH,GAAP,SAAA+E,EAAA,sEACP,EAAK7D,MAAMsE,QAAQxF,GADZ,OAEb,EAAKY,MAAMgF,QAAS,EAFP,2C,wDAKf6B,iBAAmB,SAACzH,EAAI8F,GACtB,EAAK5E,MAAMwG,eAAe1H,EAAI8F,I,4CAGhC,WAAU,IAAD,OACDlC,EAAO/B,KAAKX,MAAM0C,KAQxB,OANE/B,KAAKX,MAAMa,iBACVF,KAAKX,MAAM0F,KAAKe,SAChB9F,KAAKjB,MAAMgF,QAEZ/D,KAAK2F,aAAa5D,EAAK+C,KAGvB,sBAAK3E,UAAU,gBAAf,UACE,cAAC,GAAD,IACCH,KAAKX,MAAMa,gBACV,cAAC,WAAD,UACGF,KAAKX,MAAM0F,KAAKA,KAAO,KACtB,cAAC,IAAD,CAAO3E,MAAM,OAAOD,UAAU,cAA9B,mCAMJ,cAAC,IAAD,CAAOC,MAAM,SAASD,UAAU,cAAhC,4BAKDH,KAAKX,MAAMa,kBACXF,KAAKX,MAAM0F,KAAKe,SACjB9F,KAAKjB,MAAMgF,QACX/D,KAAKX,MAAM0F,KAAKA,KACd,cAAC,IAAD,CAAW5E,UAAU,WAArB,SACE,sBAAKA,UAAU,MAAf,UACGH,KAAKX,MAAM0F,KAAKA,KAAKL,MAAMlC,KAAI,SAACc,EAAKZ,GAAN,OAC9B,sBAAevC,UAAU,YAAzB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAUA,UAAU,uCAApB,UACE,cAAC,IAAD,CAAWwE,IAAI,KAAf,SAAqBrB,EAAKrE,OAC1B,eAAC,IAAD,CAAc0F,IAAI,KAAlB,UAAwBrB,EAAKL,MAA7B,YACA,eAAC,IAAD,gBAAaK,EAAK0B,YAClB,cAAC,IAAD,CACE5E,MAAM,SACNC,QAAS,EAAKuF,iBAAiBf,KAC7B,EACA9C,EAAK+C,IACLxB,EAAKgB,WALT,yBAYJ,yBAlBQ5B,MAqBZ,qBAAKvC,UAAU,YAAf,SACE,cAAC,IAAD,CAAMA,UAAU,gBAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAWwE,IAAI,KAAf,0BACgB3E,KAAKX,MAAM0F,KAAKA,KAAKgB,MADrC,YAGA,cAAC,GAAD,CAAU5F,UAAU,OAClB4B,KAAMA,EAAK+C,IACXO,OAAQrF,KAAKX,MAAM0F,KAAKA,KAAKgB,MAC7Bb,SAAUlF,KAAKX,MAAM6F,SACrBC,QAASnF,KAAKX,MAAM8F,sBAO9B,KACJ,cAAC,GAAD,W,GAhGWtE,aA6GJC,gBANS,SAAC/B,GAAD,MAAY,CAClCgG,KAAMhG,EAAMgG,KACZ7E,gBAAiBnB,EAAMJ,KAAKuB,gBAC5B6B,KAAMhD,EAAMJ,KAAKoD,QAGqB,CAAE4B,WAASkC,eJjGrB,SAACG,EAAQ/B,GAAT,OAAoB,SAAClD,GACjDI,IACG8E,OADH,gBACmBD,EADnB,YAC6B/B,IAC1B5C,MAAK,SAACC,GAAD,OACJP,EAAS,CACP3C,KAAMlB,EACNmB,QAASiD,EAAIC,UAGhBC,OAAM,SAACC,GAAD,OACLV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,cIuFOgH,SDnH3C,SAAC/G,EAAI+H,EAAQf,GAAb,OAAyB,SAAApE,GAC7CwC,QAAQC,IAAI,oBAAoB2B,GAChChE,IAAMC,KAAN,iBAAqBjD,GAAM,CAAC+H,WACvB7E,MAAK,SAAAC,GAAQiC,QAAQC,IAAI,eAAgBlC,EAAIC,MAC1CR,EAAS,CACT3C,KAAMf,EACNgB,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GAAG,OAAIV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,YACpEiH,EAAQgB,KAAK,cC0GNrF,CACbsF,aAAWV,KC1HPW,G,4MAOFtH,MAAQ,CACJgF,QAAQ,EACRuC,OAAQ,I,EAWZC,YAAe,SAACpI,GACb,EAAKkB,MAAMmH,UAAUrI,GACrB,EAAKmB,SAAS,CACVyE,QAAO,EACVuC,OAAQ,EAAKjH,MAAMiH,SAExB/C,QAAQC,IAAI,cAAe,EAAKzE,MAAMuH,S,4CAGrC,WAAS,IAAD,EACL/C,QAAQC,IAAI,oBAAoBxD,KAAKX,OACpC,IAAM0C,EAAO/B,KAAKX,MAAM0C,KASxB,OARAwB,QAAQC,IAAIzB,IACV/B,KAAKX,MAAMa,iBAAoBF,KAAKX,MAAMoH,MAAMX,SAAY9F,KAAKjB,MAAMgF,QAErE/D,KAAKuG,YAAYxE,EAAK+C,KAE1BvB,QAAQC,IAAI,0BAA2BxD,KAAKjB,MAAMgF,QAElDR,QAASC,IAAI,gBAAiBxD,KAAKX,MAAMoH,MAAMH,OAAOI,QAElD,gCACA,cAAC,GAAD,IACK1G,KAAKX,MAAMa,gBACR,cAAC,WAAD,UACKF,KAAKX,MAAMoH,MAAMH,SAAS,GAAK,KAC5B,cAAC,IAAD,CAAOlG,MAAM,OAAOD,UAAU,cAA9B,mCAGN,cAAC,IAAD,CAAOC,MAAM,SAASD,UAAU,cAAhC,4BAGNH,KAAKX,MAAMa,kBAAoBF,KAAKX,MAAMoH,MAAMX,SAAW9F,KAAKjB,MAAMgF,QAAU/D,KAAKX,MAAMoH,MAAMH,OAAOI,OAIpG,cAAC,KAAD,GAAWvG,UAAU,YAArB,0BAA0C,cAA1C,yBACI,qBAAKA,UAAU,4CAAf,SAEGH,KAAKX,MAAMoH,MAAMH,OAAO9D,KAAI,SAACiE,EAAM/D,GAAP,OACvB,sBAAevC,UAAU,qCAAzB,UACI,cAAC,IAAD,CAAMA,UAAU,4DAAhB,SACI,cAAC,IAAD,CAAUA,UAAU,iBAApB,SAEKsG,EAAM/B,MAAMlC,KAAI,SAACc,EAAKZ,GAAN,aACb,yBAAevC,UAAU,YAAzB,0BAA8C,QAA9C,0BAEamD,EAAKrE,KAFlB,MAE2BqE,EAAK0B,SAAS,uBAC3B1B,EAAKL,MAHnB,cAAUP,UAQtB,yBAbMA,SAJtB,IAuBH,KACD,cAAC,GAAD,W,GAhFK7B,aA6FNC,gBAPS,SAAC/B,GAAD,MAAY,CAChC0H,MAAO1H,EAAM0H,MACbvG,gBAAiBnB,EAAMJ,KAAKuB,gBAC5B6B,KAAMhD,EAAMJ,KAAKoD,QAImB,CAACyE,UFlGhB,SAACrI,GAAD,OAAQ,SAAC4C,GAC9BA,EAAS0E,MACXtE,IAAM0C,IAAN,iBAAoB1F,IACbkD,MAAK,SAAAC,GAAQiC,QAAQC,IAAI,gBAAiBlC,EAAIC,MAC3CR,EAAS,CACT3C,KAAMhB,EACNiB,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GAAG,OAAIV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,eE0F7D4C,CAAsCuF,ICtGtC,OAA0B,gDCMnCM,G,4JACL,WAAS,IAAD,IACJ,OACI,sBAAKxG,UAAU,OAAOyG,OAAQ,CAACC,SAAU,qBAAzC,UACA,cAAC,GAAD,IACA,eAAC,KAAD,GAAMC,SAAO,EAAC3G,UAAU,oBAAxB,0BAAqD,YAArD,0BACC,cAAC,IAAD,CAAS4G,IAAKC,GAASC,IAAI,iBAAkB9G,UAAU,YACvD,cAAC,IAAD,UAEC,eAAC,KAAD,GAAWwE,IAAI,KAAKxE,UAAU,QAA9B,0BAA+C,YAA/C,2DAAyF,uBAAzF,6BAJF,IAOA,cAAC,GAAD,W,GAZUU,aAmBJ8F,MCnBTO,GAAS,CAAC,SAAO,UAAW,YAAa,cAAe,eAAgB,OAAQ,UAAW,QAAS,UAAW,aAAc,aAAc,aAAc,WAAY,eAAgB,iBAAkB,wBAAyB,YAAa,2BAA4B,iBAAkB,qBAAsB,kBAAoB,QAAS,WAAY,YAAc,aAAe,kBAAgB,OAAQ,SAAU,WAAY,YAAY,aAAc,iBAkBtbC,GAfD,WACV,OACI,gCACI,cAAC,GAAD,IACA,cAAC,IAAD,CAAMhH,UAAU,8BAAhB,SACE+G,GAAO1E,KAAI,SAAC4E,EAAO1E,GAAR,OACX,6BAAgB0E,GAAP1E,QAGX,cAAC,GAAD,QClBG,OAA0B,iDC6B1B2E,GAtBI,WACf,OACI,sBAAKlH,UAAU,OAAf,UACI,cAAC,GAAD,IACA,eAAC,IAAD,CAAM2G,SAAO,EAAC3G,UAAU,4BAAxB,UACI,cAAC,IAAD,CAAS4G,IAAKO,GAAUL,IAAI,sBAAsB9G,UAAU,YAC5D,eAAC,IAAD,WACI,cAAC,IAAD,CAAWwE,IAAI,KAAKxE,UAAU,aAA9B,+BACA,eAAC,IAAD,CAAUA,UAAU,uBAApB,2SACkS,uBADlS,0TAE2T,uBAF3T,yWAG0W,uBAH1W,4CAQT,cAAC,GAAD,Q,kBCmEIoH,I,MArFE,WACf,IAAMC,EAAOC,mBAcb,OACE,8BACA,eAAC,IAAD,CAAMC,QAAM,EACZvH,UAAU,wDADV,UAGE,eAAC,IAAD,CAAWA,UAAU,uBAArB,UACF,cAAC,IAAD,CACEA,UAAU,eACVK,IAAI,cAFN,qBAMA,cAAC,IAAD,CACErC,GAAG,cACHc,KAAK,YACLwB,YAAY,oBACZrC,KAAK,YAIT,eAAC,IAAD,CAAW+B,UAAU,uBAArB,UACE,cAAC,IAAD,CACEA,UAAU,eACVK,IAAI,eAFN,mBAMA,cAAC,IAAD,CACErC,GAAG,eACHc,KAAK,aACLwB,YAAY,4BACZrC,KAAK,aAGT,eAAC,IAAD,CAAW+B,UAAU,uBAArB,UACE,cAAC,IAAD,CACEA,UAAU,eACVK,IAAI,iBAFN,qBAMA,cAAC,IAAD,CACErC,GAAG,iBACHc,KAAK,UACLwB,YAAY,UACZrC,KAAK,YAGT,eAAC,IAAD,CAAW+B,UAAU,uBAArB,UACE,cAAC,IAAD,CACEA,UAAU,eACVK,IAAI,iBAFN,qBAMA,cAAC,IAAD,CACErC,GAAG,iBACHc,KAAK,UACLwB,YAAY,oBACZrC,KAAK,gBAGT,cAAC,IAAD,CAAQiC,QA1EU,SAACb,GACjBA,EAAEI,iBAEF+H,KAAQC,SAASpC,kBAA0CA,mBAA2CgC,EAAKK,QAASrC,8BACjHnE,MAAK,SAACyG,GACHvE,QAAQC,IAAIsE,EAAOC,SAEpB,SAAC9H,GACAsD,QAAQC,IAAIvD,EAAM8H,UAkE1B,yBChBaC,GA7DH,WACR,MAA4BC,mBAAS,IAArC,oBAAO1H,EAAP,KAAe2H,EAAf,KACA,EAA0BD,mBAAS,CAC/B,CACInD,IAAK,IACLqD,WAAY,CAAC,4MACbC,UAAW,+BAEf,CACItD,IAAK,IACLqD,WAAY,CAAC,iJACbC,UAAW,uEAEf,CACItD,IAAK,IACLqD,WAAa,CAAC,uKACdC,UAAY,+CAEhB,CACItD,IAAK,IACLqD,WAAY,CAAC,8LACbC,UAAW,iEAnBnB,oBAAOC,EAAP,UA6BJ,OACC,sBAAKlI,UAAU,oBAAf,UACD,cAAC,GAAD,IACA,sBAAKA,UAAU,UAAf,UACI,cAAC,WAAD,UACKkI,EAAM7F,KAAI,SAAC8F,EAAM5F,GAAP,OACP,eAAC,IAAD,CAAMvC,UAAU,oDAAhB,UACI,cAAC,IAAD,CAAYE,QAAS,kBAdXlC,EAc8BmK,EAAKxD,SAZrDoD,EADE3H,IAAWpC,EACH,GAEAA,GAJO,IAACA,GAcV,SACI,6BAAKmK,EAAKF,cAEd,cAAC,IAAD,CAAW7H,OAAQA,IAAW+H,EAAKxD,IAAnC,SACI,cAAC,IAAD,UACI,6BACKwD,EAAKH,WAAW3F,KAAI,SAACc,EAAMZ,GAAP,OACjB,6BAAeY,GAANZ,cAR4C4F,EAAKxD,UAiBtF,oBAAI3E,UAAU,eAAd,wBACA,cAAC,GAAD,OAED,cAAC,GAAD,QCVYiG,gBAAWtF,eArCd,WACR,OACI,8BACI,eAAC,KAAD,WACC,cAAC,KAAD,CAAOyH,KAAK,QAAZ,SACW,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAER,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,OAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,KAAD,CAAOA,KAAK,UAAZ,SACI,cAACC,GAAD,MAEJ,cAAC,KAAD,CAAU3G,GAAG,mB,mCC5CvB4G,GAAe,CACjB/D,MAAO,GACPoB,SAAS,GCFP2C,GAAe,CACjBxK,IAAK,GACLC,OAAQ,KACRC,GAAI,MCMFsK,GAAe,CACjB/J,MAAOgK,aAAaC,QAAQ,SAC5BzI,gBAAiB,KACjB0I,WAAW,EACX7G,KAAM,MCbJ0G,GAAe,CACjB1D,KAAM,KACNe,SAAS,GCFP2C,GAAe,CACjBnC,OAAQ,GACRR,SAAS,GCGE+C,gBAAgB,CAC3BvF,KLDW,WAAqC,IAA5BvE,EAA2B,uDAArB0J,GAAcK,EAAO,uCAC/C,OAAOA,EAAO1K,MACV,KAAK1B,EACD,oCACOqC,GADP,IAEI2F,MAAOoE,EAAOzK,QACdyH,SAAS,IAGjB,KAAKnJ,EACD,oCACOoC,GADP,IAEI2F,MAAM,CAAEoE,EAAOzK,SAAV,oBAAsBU,EAAM2F,UAGzC,KAAK9H,EACD,oCACOmC,GADP,IAEI2F,MAAO3F,EAAM2F,MAAMqE,QAAO,SAAAzF,GAAI,OAAIA,EAAKwB,MAAMgE,EAAOzK,aAG5D,KAAKxB,EACD,MAAqBiM,EAAOzK,QAApBF,EAAR,EAAQA,GAAIoD,EAAZ,EAAYA,KACZ,oCACOxC,GADP,IAEI2F,MAAO3F,EAAM2F,MAAMlC,KAAI,SAAAc,GAChBA,EAAKwB,MAAM3G,IACVmF,EAAO/B,QAKvB,KAAKzE,EACD,oCACOiC,GADP,IAEI+G,SAAS,IAGjB,QACI,OAAO/G,IKrCfkB,MJDW,WAAqC,IAA5BlB,EAA2B,uDAArB0J,GAAcK,EAAO,uCAC/C,OAAOA,EAAO1K,MACV,KAAKN,EACD,MAAM,CACFG,IAAK6K,EAAOzK,QAAQJ,IACpBC,OAAQ4K,EAAOzK,QAAQH,OACvBC,GAAI2K,EAAOzK,QAAQF,IAG3B,KAAKJ,EACD,MAAM,CACFE,IAAK,GACLC,OAAQ,KACRC,GAAI,MAGZ,QACI,OAAOY,IIffJ,KHQW,WAAqC,IAA5BI,EAA2B,uDAArB0J,GAAcK,EAAO,uCAC/C,OAAOA,EAAO1K,MACV,KAAKd,EACD,OAAO,6BACAyB,GADP,IAEI6J,WAAW,IAEnB,KAAKrL,EACD,oCACOwB,GADP,IAEImB,iBAAiB,EACjB0I,WAAW,EACX7G,KAAM+G,EAAOzK,UAErB,KAAKZ,EACL,KAAKG,EAED,OADA8K,aAAaM,QAAQ,QAAQF,EAAOzK,QAAQK,OAC5C,0CACOK,GACA+J,EAAOzK,SAFd,IAGI6B,iBAAiB,EACjB0I,WAAW,IAEnB,KAAKpL,EACL,KAAKE,EACL,KAAKC,EACL,KAAKE,EAED,OADA6K,aAAaO,WAAW,SACxB,6BACOlK,GADP,IAEIL,MAAO,KACPqD,KAAM,KACN7B,iBAAiB,EACjB0I,WAAW,IAEnB,QACI,OAAO7J,IG3CfgG,KFJW,WAAqC,IAA5BhG,EAA2B,uDAArB0J,GAAcK,EAAO,uCAC/C,OAAOA,EAAO1K,MACV,KAAKpB,EACD,OAAO,6BACA+B,GADP,IAEIgG,KAAM+D,EAAOzK,QACbyH,SAAS,IAGjB,KAAK7I,EAML,KAAKC,EACD,OAAO,6BACA6B,GADP,IAEIgG,KAAM+D,EAAOzK,UAGrB,KAAKtB,EACD,OAAO,6BACAgC,GADP,IAEI+G,SAAS,IAGjB,QACI,OAAO/G,IEvBf0H,MDLW,WAAqC,IAA5B1H,EAA2B,uDAArB0J,GAAcK,EAAO,uCAC/C,OAAOA,EAAO1K,MACV,KAAKhB,EACD,oCACO2B,GADP,IAEIuH,OAAQwC,EAAOzK,QACfyH,SAAS,IAGjB,KAAKzI,EACD,oCACO0B,GADP,IAEIuH,OAAO,CAAEwC,EAAOzK,SAAV,oBAAsBU,EAAMuH,WAG1C,KAAKnJ,EACD,oCACO4B,GADP,IAEI+G,SAAS,IAGjB,QACI,OAAO/G,MEvBbmK,GAAa,CAACC,MAOLC,GALDC,aAAYC,GAJL,GAIgCC,aACjDC,KAAe,WAAf,EAAmBN,MCAjBO,G,uKACJ,WACEL,GAAMrI,U5BPoB,SAACA,EAAUtC,GAErCsC,EAAS,CAAE3C,KAAMd,IAEjB6D,IAAM0C,IAAI,YAAarF,EAAYC,IAC9B4C,MAAK,SAAAC,GAASiC,QAAQC,IAAI,0BAA2BlC,EAAIC,MACvDR,EAAS,CACR3C,KAAMb,EACNc,QAASiD,EAAIC,UAEhBC,OAAM,SAAAC,GACHV,EAAS/C,EAAayD,EAAIC,SAASH,KAAME,EAAIC,SAASxD,SACtD6C,EAAS,CACL3C,KAAMZ,Y,oB4BJpB,WACE,OACE,cAAC,IAAD,CAAU4L,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,qBAAKjJ,UAAU,MAAf,SACE,cAAC,GAAD,c,GATMU,aAiBH4I,MCrBfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64295936.chunk.js","sourcesContent":["export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const CART_LOADING = 'CART_LOADING';\nexport const GET_CART = 'GET_CART';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\nexport const ORDERS_LOADING = 'ORDERS_LOADING';\nexport const GET_ORDERS = 'GET_ORDERS';\nexport const CHECKOUT = 'CHECKOUT';\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id }\n    }\n}\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    }\n}","import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, UPDATE_ITEM, ITEMS_LOADING } from './types';\nimport { returnErrors } from './errorActions';\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/items')\n        .then(res => {console.log('res getItem', res) \n            return dispatch({\n            type: GET_ITEMS,\n            payload: res.data\n        })})\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}\n\nexport const addItem = (item) => (dispatch) => {\n    axios.post('/items', item)\n        .then(res => {console.log('res add to cart',res)\n        dispatch({\n            type: ADD_ITEM,\n            payload: res.data\n        })})\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const deleteItem = (id) => (dispatch) => {\n    axios.delete(`/items/${id}`)\n        .then(res => dispatch({\n            type: DELETE_ITEM,\n            payload: id\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const updateItem = (id, item) => (dispatch) => {\n    axios.put(`/items/${id}`, item)\n        .then(res => dispatch({\n            type: UPDATE_ITEM,\n            payload: Promise.all([id, res.data])\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const setItemsLoading = () => {\n    return{\n        type: ITEMS_LOADING\n    }\n}","import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL} from './types';\n\nexport const loadUser = () => (dispatch, getState) => {\n    // User loading\n    dispatch({ type: USER_LOADING });\n\n    axios.get('/api/user', tokenConfig(getState))\n        .then(res => { console.log('data from auth auctions', res.data)\n           dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })})\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            });\n        });\n}\n\nexport const register = ({name, email, password}) => dispatch => {\n    // headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    //request body\n    const body = JSON.stringify({name, email, password});\n\n    axios.post('/api/register',body,config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        });\n}\n\nexport const login = ({email, password}) => dispatch => {\n    // headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    //request body\n    const body = JSON.stringify({email, password});\n\n    axios.post('/api/login',body,config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        });\n}\n// logout user\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}\n\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n    //Get token from local storage\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers:{\n            \"Content-type\": \"application/json\",\n        }\n    }\n\n    if(token){\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config;\n}","import { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport './login.scss'\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'REGISTER_FAIL'){\n                this.setState({msg: error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n\n        // If authenticated, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () => {\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();  \n        \n        const { name, email, password } = this.state;\n\n        // Crete user object\n        const newUser = { name, email, password};\n\n        // Attempt to register\n        this.props.register(newUser);\n\n\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <Button color=\"dark\" className=\"btn btn-sm border border-light\"><NavLink onClick={this.toggle} href=\"#\"><span className=\"text-light btn-text\"><b>Register</b></span></NavLink></Button>\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        Register\n                    </ModalHeader>\n                    <ModalBody>\n                        {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>):null}\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\">Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    placeholder=\"Name\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Button\n                                    color=\"dark\"\n                                    style={{marginTop: '2rem'}}\n                                    className='btn-text'\n                                    block\n                                >Register</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps,{register, clearErrors})(RegisterModal);","import { Component, Fragment } from 'react';\nimport { logout } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport {NavItem} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport './login.scss'\n\nexport class Logout extends Component {\n    static propTypes = {\n        logout: PropTypes.func.isRequired\n    }\n\n    render() {\n        return (\n            <div>\n                <Fragment>\n<NavItem onClick={this.props.logout} href=\"#\"><Link to=\"/home\"><span className=\"text-secondary btn-text\"><b>Logout</b></span></Link></NavItem>\n                </Fragment>\n            </div>\n        )\n    }\n}\n\nexport default connect(null,{logout})(Logout);","import { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport './login.scss'\n\nclass LoginModal extends Component {\n    state = {\n        modal: false,\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if(error !== prevProps.error){\n            // Check for login error\n            if(error.id === 'LOGIN_FAIL'){\n                this.setState({msg: error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n\n        // If authenticated, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () => {\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault(); \n        \n        const {email, password} = this.state;\n        const user = {email, password};\n\n        // Attempt to login\n        this.props.login(user);\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <Button color=\"dark\" className=\"btn btn-sm border border-light\"><NavLink onClick={this.toggle} href=\"#\"><span className=\"text-light btn-text\"><b>Login</b></span></NavLink></Button>\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        Login\n                    </ModalHeader>\n                    <ModalBody>\n                        {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>):null}\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Button\n                                    color=\"dark\"\n                                    style={{marginTop: '2rem'}}\n                                    className='btn-text'\n                                    block\n                                >Login</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps,{login, clearErrors})(LoginModal);","import { Component, Fragment } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from \"reactstrap\";\nimport RegisterModal from \"./auth/registerModal\";\nimport Logout from \"./auth/logout\";\nimport LoginModal from \"./auth/loginModal\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n\nconst navLinks = [\n    { navlink: \"/home\", title: \"Home\", className: \"navlink text-white\" },\n    { navlink: \"/lineup\", title: \"Lineup\", className: \"navlink\" },\n    { navlink: \"/tickets\", title: \"Tickets\", className: \"navlink\" },\n    { navlink: \"/cart\", title: \"Cart\", className: \"navlink\" },\n    { navlink: \"/orders\", title: \"Orders\", className: \"navlink mr-2\" },\n    {navlink: \"/philosophy\", title: \"Philosophy\", className: \"navlink\"},\n    {navlink: \"/faq\", title: \"F.A.Q\", className: \"navlink\"},\n  ];\n\n\n  const NavListItem = ({ className, navLink, title }) => (\n    <Link to={navLink}>\n    <NavItem className={className}>\n       {title}\n     \n    </NavItem>\n    </Link>\n  );\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n\n    const authLinks = (\n      <Fragment>\n         { navLinks.map((link, key)=>\n          <NavListItem key={key} className={link.className} navLink={link.navlink} title={link.title} />\n          )}\n     \n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar\n         dark\n          expand=\"sm\"\n          className=\"navbar navbar-fluid \"\n        >\n          <Container>\n            <NavbarBrand className=\"brand\" href=\"/home\">\n              MUSICVERSE\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" color=\"white\" navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);\n","import { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport AppNavbar from './AppNavbar';\n\n\nclass AddItem extends Component {\n    state = {\n        title: '',\n        description: '',\n        price: '',\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n\n        const newItem = {\n            title: this.state.title,\n            description: this.state.description,\n            price: this.state.price\n        }\n\n        await this.props.addItem(newItem);\n\n        alert('Item added successfully');\n    }\n\n    render(){\n        return(\n            <div>\n                <AppNavbar/>\n                <Container>\n                    <h2 className=\"text-center mb-3\">Add a new Item</h2>\n                    { this.props.isAuthenticated ?\n                    <Form onSubmit={this.onSubmit}>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"title\"\n                                id=\"title\"\n                                placeholder=\"Title of the item\"\n                                onChange={this.onChange}\n                            />\n                            <br/>\n                            <Label for=\"description\">Description</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"description\"\n                                id=\"description\"\n                                placeholder=\"Description of the item\"\n                                onChange={this.onChange}\n                            />\n                            <br/>\n                            <Label for=\"price\">Price</Label>\n                            <Input\n                                type=\"number\"\n                                name=\"price\"\n                                id=\"price\"\n                                placeholder=\"Price of the item\"\n                                onChange={this.onChange}\n                            />\n                            \n                            <Button\n                                color=\"dark\"\n                                style={{marginTop: '2rem'}}\n                                block\n                            >Add Item</Button>\n                        </FormGroup>\n                    </Form> : \n                    <Alert className=\"text-center\" color=\"danger\">Login to add items!</Alert>\n                    }\n                </Container>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps,{addItem})(AddItem);","import { Component } from 'react';\nimport { Navbar} from 'reactstrap';\n\nclass Footer extends Component {\n   render(){\n    return (\n     <div >\n        <Navbar  fixed=\"bottom\" className='footer justify-content-center'  >\n        \n              MUSICVERSE 2022\n      \n        </Navbar>\n     </div>\n    )\n}\n}\nexport default Footer","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport { GET_CART, ADD_TO_CART, DELETE_FROM_CART, CART_LOADING } from \"./types\";\n\nexport const getCart = (id) => (dispatch) => {\n  dispatch(setCartLoading());\n  axios\n    .get(`/cart/${id}`)\n    .then((res) =>{ console.log('getCart res data', res)\n      dispatch({\n        type: GET_CART,\n        payload: res.data,\n      })}\n    )\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addToCart = (id, productId, quantity) => (dispatch) => {\n  axios\n    .post(`/cart/${id}`, { productId, quantity })\n    .then((res) =>{console.log('res add to cart',res)\n      dispatch({\n        type: ADD_TO_CART,\n        payload: res.data,\n      })}\n    )\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteFromCart = (userId, itemId) => (dispatch) => {\n  axios\n    .delete(`/cart/${userId}/${itemId}`)\n    .then((res) =>\n      dispatch({\n        type: DELETE_FROM_CART,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const setCartLoading = () => {\n  return {\n    type: CART_LOADING,\n  };\n};\n","import { Component } from \"react\";\nimport AppNavbar from \"./AppNavbar\";\nimport Footer from \"./Footer\"\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n  Container,\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems } from \"../actions/itemActions\";\nimport { addToCart, getCart } from \"../actions/cartActions\";\nimport './main.scss'\n\n\nclass Tickets extends Component {\n  state = {\n    loaded: false,\n  };\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  isItemInCart = (itemId, cartItems) => {\n    console.log(\"itemId from tickets\", itemId);\n    console.log(\"cartItems from tickets\", cartItems);\n\n    const itemInCart = cartItems.find(\n      (cartItem) => cartItem.productId === itemId\n    );\n    console.log(\"item in cart from tickets\", itemInCart);\n    if (itemInCart) {\n      return \"Added to Cart\";\n    }\n    return \"Add To Cart\";\n  };\n\n  onAddToCart = async (id, productId) => {\n    await this.props.addToCart(id, productId, 1);\n  };\n\n  render() {\n    const user = this.props.user;\n    const { items } = this.props.item;\n    console.log(\"From Tickets\", this.props);\n    return (\n      <div className=\"mainTicket bg-light\" >\n        <AppNavbar />\n        <Container className=\"bg-light\" >\n          <div className=\"row mb-4\">\n            {items.map((item) => (\n              <div key={item.title} className=\"col-md-12 bg-light\">\n                <Card className=\"mb-5 card bg-light\">\n                  <CardBody className=\"card\">\n                    <CardTitle tag=\"h5\">{item.title}</CardTitle>\n                    <CardSubtitle tag=\"h6\" > {item.price}€</CardSubtitle>\n                    {this.props.isAuthenticated ? (\n                      <Button\n                        color=\"dark\"\n                        size=\"sm\"\n                        onClick={this.onAddToCart.bind(\n                          this,\n                          user._id,\n                          item._id\n                        )}\n                      >\n                        {!this.props.cart.cart\n                          ? \"Add To Cart\"\n                          : this.isItemInCart(\n                              item._id,\n                              this.props.cart.cart.items\n                          )}\n                      </Button>\n                    ) : null}\n                  </CardBody>\n                </Card>\n              </div>\n            ))}\n          </div>\n        </Container>\n        <Footer/>\n      </div>\n    \n     \n    );\n  }\n  static propTypes = {\n    getCart: PropTypes.func.isRequired,\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    addToCart: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  cart: state.cart,\n});\n\nexport default connect(mapStateToProps, { getItems, addToCart, getCart })(\n  Tickets\n);\n","import StripeCheckout from \"react-stripe-checkout\";\n\nconst STRIPE_PUBLISHABLE = process.env.REACT_APP_STRIPE_API_KEY;\n\nconst onToken = (user, checkout, history) => (token) =>{\n try{\n    checkout(user, token.id, history);\n }catch(err){\nconsole.error(err)\n } \n}\n\nconst Checkout = ({ amount, user, checkout, history }) => (\n  <StripeCheckout\n    amount={amount * 100}\n    token={onToken(user, checkout, history)}\n    currency=\"EUR\"\n    stripeKey={STRIPE_PUBLISHABLE}\n  />\n);\n\nexport default Checkout;\n","import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { GET_ORDERS, CHECKOUT, ORDERS_LOADING } from './types';\n\nexport const getOrders = (id) => (dispatch )=> {\n    dispatch(setOrdersLoading());\n  axios.get(`/order/${id}`)\n        .then(res => {console.log('res getOrders', res.data)\n            dispatch({\n            type: GET_ORDERS,\n            payload: res.data\n        })})\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}\n\nexport const checkout = (id, source, history) => dispatch => {\n    console.log('from order action',history)\n    axios.post(`/order/${id}`, {source})\n        .then(res => {console.log('res checkout', res.data)\n            dispatch({\n            type: CHECKOUT,\n            payload: res.data\n        })})\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n        history.push('/orders')\n}\n\nexport const setOrdersLoading = () => {\n    return{\n        type: ORDERS_LOADING\n    }\n}","import { Component, Fragment } from \"react\";\nimport AppNavbar from \"./AppNavbar\";\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n  Alert,\n  Container,\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCart, deleteFromCart } from \"../actions/cartActions\";\nimport Checkout from \"./Checkout\";\nimport { checkout } from \"../actions/orderActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Footer from \"./Footer\"\n\n\nclass Cart extends Component {\n  state = {\n    loaded: false,\n  };\n\n  static propTypes = {\n    getCart: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n    addToCart: PropTypes.func.isRequired,\n    deleteFromCart: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    cart: PropTypes.object.isRequired,\n    checkout: PropTypes.func.isRequired,\n  };\n\n  getCartItems = async (id) => {\n    await this.props.getCart(id);\n    this.state.loaded = true;\n  };\n\n  onDeleteFromCart = (id, itemId) => {\n    this.props.deleteFromCart(id, itemId);\n  };\n\n  render() {\n    const user = this.props.user;\n    if (\n      this.props.isAuthenticated &&\n      !this.props.cart.loading &&\n      !this.state.loaded\n    ) {\n      this.getCartItems(user._id);\n    }\n    return (\n      <div className=\"body bg-light\">\n        <AppNavbar />\n        {this.props.isAuthenticated ? (\n          <Fragment>\n            {this.props.cart.cart ? null : (\n              <Alert color=\"info\" className=\"text-center\">\n                Your cart is empty!\n              </Alert>\n            )}\n          </Fragment>\n        ) : (\n          <Alert color=\"danger\" className=\"text-center\">\n            Login to View!\n          </Alert>\n        )}\n\n        {this.props.isAuthenticated &&\n        !this.props.cart.loading &&\n        this.state.loaded &&\n        this.props.cart.cart ? (\n          <Container className=\"bg-light\">\n            <div className=\"row\">\n              {this.props.cart.cart.items.map((item,key) => (\n                <div key={key} className=\"col-md-10\">\n                  <Card>\n                    <CardBody className=\"cardbody bg-light border border-dark\" >\n                      <CardTitle tag=\"h5\">{item.name}</CardTitle>\n                      <CardSubtitle tag=\"h6\">{item.price}€</CardSubtitle>\n                      <CardText>x {item.quantity}</CardText>\n                      <Button\n                        color=\"danger\"\n                        onClick={this.onDeleteFromCart.bind(\n                          this,\n                          user._id,\n                          item.productId\n                        )}\n                      >\n                        Delete\n                      </Button>\n                    </CardBody>\n                  </Card>\n                  <br />\n                </div>\n              ))}\n              <div className=\"col-md-12\">\n                <Card className=\"mb-5 bg-light\" >\n                  <CardBody>\n                    <CardTitle tag=\"h5\">\n                      Total Cost = {this.props.cart.cart.total}€\n                    </CardTitle>\n                    <Checkout className=\"mb-4\"\n                      user={user._id}\n                      amount={this.props.cart.cart.total}\n                      checkout={this.props.checkout}\n                      history={this.props.history}\n                    />\n                  </CardBody>\n                </Card>\n              </div>\n            </div>\n          </Container>\n        ) : null}\n        <Footer/>\n      </div>\n    \n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { getCart, deleteFromCart, checkout })(\n  withRouter(Cart)\n);\n","import { Component, Fragment } from 'react';\nimport AppNavbar from './AppNavbar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOrders } from '../actions/orderActions';\nimport {Card, CardBody, Alert, Container} from 'reactstrap';\nimport Footer from './Footer';\n\n\nclass Orders extends Component {\n\n   /* constructor(props){\n        super(props)\n        this.state = {loaded:false}\n     \n    }*/\n    state = {\n        loaded: false,\n        orders: []\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        user: PropTypes.object.isRequired,\n        order: PropTypes.object.isRequired,\n        getOrders: PropTypes.func.isRequired\n    }\n\n    \n    ongetOrders =  (id) => {\n       this.props.getOrders(id);\n       this.setState({\n           loaded:true,\n        orders: this.props.orders\n    }); \n   console.log('order props', this.state.orders)\n}\n\n    render(){\n       console.log('props from orders',this.props)\n        const user = this.props.user;\n        console.log(user)\n       if(this.props.isAuthenticated && !this.props.order.loading && !this.state.loaded){\n       \n            this.ongetOrders(user._id);\n        }\n        console.log('this state loaded order', this.state.loaded)\n\n        console. log('orders length', this.props.order.orders.length ) \n        return(\n            <div>\n            <AppNavbar/>\n                {this.props.isAuthenticated ?\n                    <Fragment>\n                        {this.props.order.orders!==[] ? null :\n                            <Alert color=\"info\" className=\"text-center\">You have no orders!</Alert>\n                        }\n                    </Fragment>\n                    : <Alert color=\"danger\" className=\"text-center\">Login to View!</Alert>\n                }\n\n               {this.props.isAuthenticated && !this.props.order.loading && this.state.loaded && this.props.order.orders.length? \n            \n                   \n\n                    <Container className='bg-light' className=\"main-order\">\n                        <div className=\"row justify-content-center mt-2 mb-2 pt-1\">\n\n                          {this.props.order.orders.map((order,key)=>(\n                                <div key={key} className=\" col-md-10 justify-content-center \">\n                                    <Card className=\"card  p-0 ml-6 border justify-content-center border-dark \" >\n                                        <CardBody className='pt-1 card-body' >\n\n                                            {order.items.map((item,key)=>(\n                                                <div key={key} className=\"col-md-4\" className='text'>\n\n                                                            {item.name} - {item.quantity}<br />\n                                                             {item.price}€\n                                                </div>\n                                            ))}\n                                        </CardBody>\n                                    </Card>\n                                    <br/>\n                                </div>\n                                \n                            ))}\n                        </div>\n                    </Container>\n                :null}\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n})\n\n\nexport default connect(mapStateToProps, {getOrders})(Orders);","export default __webpack_public_path__ + \"static/media/frontPage2optimised.6c8d7088.jpg\";","import React from \"react\";\nimport {Component} from 'react'\nimport { Card, CardTitle, CardImg, CardImgOverlay } from \"reactstrap\";\nimport mainPic from '../assests/frontPage2optimised.jpg'\nimport AppNavbar from \"./AppNavbar\";\nimport Footer from \"./Footer\";\nclass Home extends Component {\n render(){\n     return(\n         <div className=\"main\" styles={{overflow: 'hidden !important'}}>\n         <AppNavbar/>\n         <Card inverse className=\"container-fluid \" className=\"mainpage\" >\n          <CardImg src={mainPic} alt=\"festival stage\"  className=\"cardimg\" />\n          <CardImgOverlay>\n           \n           <CardTitle tag='h3' className=\"mt-4\" className=\"datetext\" > SAVE THE DATE FOR MUSICVERSE <br/> JUNE 25-26 2022</CardTitle>\n          </CardImgOverlay>\n          </Card>\n         <Footer/>\n         </div>\n   \n     )\n }\n}\n\nexport default Home\n","import React from 'react'\nimport AppNavbar from './AppNavbar'\nimport Footer from './Footer'\nimport {List} from 'reactstrap'\n\n\nconst lineup = ['Âme', 'Pan-Pot', 'Ben Clock', 'Amelie Lens', 'Mind Against', 'ANNA', 'Rebekah', 'Dixon', 'Solomun', 'Maceo Plex', 'Tail of Us', 'Adam Bayer', 'Carl Cox', 'Sam Paganini', 'Kerri Chandler', 'Renaat Vandepapeliere', 'Ten Walls', 'Motor City Drum Ensemble', 'Marcel Dettman', 'Ricardo Villalobos', 'Kattenkarussell' , 'Molly', 'Lawrence', 'Extravelt' , 'Carl Craig' , 'Roman Flügel', 'Daso', 'Raresh', 'Claptone', 'Peggy Gou','Elderbrook', '...many more!' ]\n\n\nconst LineUp =()=>{\n    return(\n        <div>\n            <AppNavbar/>\n            <List className=\"text-center bg-light lineup\">\n            { lineup.map((artist,key)=>\n              <li key={key} >{artist}</li>\n                )}\n            </List>\n            <Footer/>\n        </div>\n    )\n}\n\n\nexport default LineUp","export default __webpack_public_path__ + \"static/media/Optimized-philosophy.a22a754a.jpg\";","import React from \"react\";\nimport { Card, CardTitle, CardImg, CardImgOverlay, CardText } from \"reactstrap\";\nimport coverPic from '../assests/Optimized-philosophy.jpg'\nimport AppNavbar from \"./AppNavbar\";\nimport Footer from \"./Footer\";\n\n\nconst Philosophy = () =>{\n    return(\n        <div className=\"main\">\n            <AppNavbar/>\n            <Card inverse className=\"container-fluid phil-page\">\n                <CardImg src={coverPic} alt='festival chill zone' className=\"cardImg\" />\n                <CardImgOverlay>\n                    <CardTitle tag=\"h3\" className=\"p-0 header\"> ABOUT MUSICVERSE</CardTitle>\n                    <CardText className=\" pt-1 pb-2 phil-text\">\n                        Musicverse was created by music lovers to musiclovers! We invite you to join our vision of paradise as an electronic music lovers. We guarantee you'll be taken to another dimetion by the great artist we invite to perform in MUSICVERSE along with our guests who are like-minded like you.<br/>\n                        We promote local talents along with international electronic music masters. This year, we decided to dedicate a stage for local new artists in order to help them to succeed in music industry. If you are an artist, please contact us by contact form we provide in F.A.Q, we're looking forward to hearing from you!<br/>\n                        We highly encourage our guests to stay in the camping to enjoy full experience of MUSICVERSE. For those who'd like to travel light, we'll have an option to rent the tents on camping site. People often leave them behind and we try to recycle them and give them a second life. For your comfort we'll provide breakfast bar in the camping as well as hot showers.<br/>\n                        We cant wait to see you in July!\n                    </CardText>\n                </CardImgOverlay>\n            </Card>\n           <Footer/> \n        </div>\n    )\n    \n}\n\nexport default Philosophy","import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport './_Contact.scss'\nimport {Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst  Contact = () => {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm(process.env.REACT_APP_EMAILJS_SERVICE_ID, process.env.REACT_APP_EMAILJS_TEMPLATE_ID, form.current, process.env.REACT_APP_EMAILJS_USER_ID)\n      .then((result) => {\n          console.log(result.text);\n      \n      }, (error) => {\n          console.log(error.text);\n      });\n  };\n\n  return (\n    <div>\n    <Form inline\n    className='col-md-6 mr-3 mb-3 bg-light justify-items-center form'\n    >\n      <FormGroup className=\"mb-2 me-sm-3 mb-sm-1\">\n    <Label\n      className=\"me-sm-2 mt-2\"\n      for=\"exampleName\"\n    >\n      Subject\n    </Label>\n    <Input\n      id=\"exampleName\"\n      name=\"user_name\"\n      placeholder=\"Tell us your name\"\n      type=\"text\"\n  \n    />\n  </FormGroup>\n  <FormGroup className=\"mb-2 me-sm-2 mb-sm-0\">\n    <Label\n      className=\"me-sm-2 mt-2\"\n      for=\"exampleEmail\"\n    >\n      Email\n    </Label>\n    <Input\n      id=\"exampleEmail\"\n      name=\"user_email\"\n      placeholder=\"iLoveMusicverse@email.com\"\n      type=\"email\"\n    />\n  </FormGroup>\n  <FormGroup className=\"mb-2 me-sm-2 mb-sm-0\">\n    <Label\n      className=\"me-sm-2 mt-2\"\n      for=\"exampleSubject\"\n    >\n      Subject\n    </Label>\n    <Input\n      id=\"exampleSubject\"\n      name=\"subject\"\n      placeholder=\"Subject\"\n      type=\"text\"\n    />\n  </FormGroup>\n  <FormGroup className=\"mb-2 me-sm-2 mb-sm-0\">\n    <Label\n      className=\"me-sm-2 mt-2\"\n      for=\"exampleSubject\"\n    >\n      Message\n    </Label>\n    <Input\n      id=\"exampleMessage\"\n      name=\"message\"\n      placeholder=\"Type your message\"\n      type=\"textarea\"\n    />\n  </FormGroup>\n  <Button onClick={sendEmail} >\n    Send \n  </Button>\n \n</Form>\n</div>\n  );\n};\nexport default Contact","import React, { Fragment, useState } from 'react';\nimport { Collapse, CardBody, Card, CardHeader } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport Footer from \"./Footer\";\nimport Contact from './Contact'\nconst FAQ = () => {\n    const [isOpen, setIsOpen] = useState('');\n    const [lists, setLists] = useState([\n        {\n            _id: '1',\n            item_names: [\"We'll provide a breakfast bar with some juices, sandwitches in the morning but we highly encourage you to bring your own supplies or enjoy the food trucks that'll be available for you in the festival.\"],\n            list_name: 'Food options at the camping',\n        },\n        {\n            _id: '2',\n            item_names: [\"We are making sure to acomodate everyones dietary choices, therefore we'll be providing food options for many different dietary requirements.\"],\n            list_name: 'Will vegetarian/vegan food options be provided during the festival?', \n        },\n        {\n            _id: '3',\n            item_names : [\"You can bring your own alcohol to the camping, but not to the festival. However, we make it our mission to ensure the supply during the festival in our bar stands.\"],\n            list_name : \"Can I bring my own alcohol to the festival?\"\n        },\n        {\n            _id: '4',\n            item_names: [\"Please bring your own sleeping bag, we'll provide the tent, additional rain cover (just in case) and foldable chairs (amount corresponds to the number of people the tent can accomodate).\"],\n            list_name: \"I rented a tent, what will be provided along with the tent?\"\n        }\n    ]);\n    const handleToggle = (id) => {\n      if (isOpen === id) {\n        setIsOpen(\"\");\n      } else {\n        setIsOpen(id);\n      }\n    };\nreturn (\n <div className='question bg-light'>\n<AppNavbar />\n<div className='content'>\n    <Fragment>\n        {lists.map((list, key) => (\n            <Card className=\"col-md-8 m-1 ml-md-4 mt-2 justify-content-center \" key={list._id}>\n                <CardHeader onClick={() => handleToggle(list._id)}>\n                    <h4>{list.list_name}</h4>\n                </CardHeader>\n                <Collapse  isOpen={isOpen === list._id }>\n                    <CardBody>\n                        <ul>\n                            {list.item_names.map((item, key) => (\n                                <li key={key}>{item}</li>\n                            ))}\n                        </ul>\n                    </CardBody>\n                </Collapse>\n            </Card>\n        ))}\n      \n    </Fragment>\n    <h3 className='contact pb-5'>Contact Us</h3>\n    <Contact />\n   </div>\n   <Footer />\n  </div>\n);\n                            }\nexport default FAQ\n\n","\nimport AddItem from './AddItem';\nimport Tickets from './Tickets';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Cart from './Cart';\nimport Orders from './Order';\nimport Home from './Home';\nimport LineUp from './Lineup';\nimport Philosophy from './Philosophy';\nimport FAQ from './Faq';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contact from './Contact';\n\n\nconst Main =() =>{\n    return (\n        <div>\n            <Switch>\n             <Route path=\"/home\">\n                        <Home/>\n                    </Route>\n                    <Route path=\"/philosophy\">\n                        <Philosophy/>\n                    </Route>\n                    <Route path=\"/lineup\">\n                        <LineUp/>\n                    </Route>\n                <Route path='/tickets'>\n                    <Tickets/>\n                </Route>\n                <Route path='/addItem'>\n                    <AddItem/>\n                </Route>\n                <Route path='/cart'>\n                    <Cart/>\n                </Route>\n                <Route path='/faq'>\n                    <FAQ/>\n                </Route>\n                <Route path=\"/contact\">\n                    <Contact/>\n                </Route>\n                <Route path='/orders'>\n                    <Orders/>\n                </Route>\n                <Redirect to='/home'/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default withRouter(connect()(Main))","import { GET_ITEMS, ADD_ITEM, UPDATE_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\n\nconst initialState = {\n    items: [],\n    loading: false\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_ITEMS:\n            return{\n                ...state,\n                items: action.payload,\n                loading: false\n            }\n        \n        case ADD_ITEM:\n            return{\n                ...state,\n                items: [action.payload, ...state.items]\n            }\n        \n        case DELETE_ITEM:\n            return{\n                ...state,\n                items: state.items.filter(item => item._id!==action.payload)                \n            };\n        \n        case UPDATE_ITEM:\n            const { id, data } = action.payload;\n            return{\n                ...state,\n                items: state.items.map(item => {\n                    if(item._id===id){\n                        item = data;\n                    }\n                })\n            }\n\n        case ITEMS_LOADING:\n            return{\n                ...state,\n                loading: true\n            }\n\n        default:\n            return state;\n    }\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return{\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            };\n        \n        case CLEAR_ERRORS:\n            return{\n                msg: {},\n                status: null,\n                id: null\n            };\n            \n        default:\n            return state;\n    }\n}","import {\n    USER_LOADING,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return{\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            }\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token',action.payload.token);\n            return{\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return{\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","import { GET_CART, ADD_TO_CART, DELETE_FROM_CART, CART_LOADING } from '../actions/types';\n\nconst initialState = {\n    cart: null,\n    loading: false\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_CART:\n            return {\n                ...state,\n                cart: action.payload,\n                loading: false\n            }\n\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cart: action.payload\n            }\n\n        case DELETE_FROM_CART:\n            return {\n                ...state,\n                cart: action.payload\n            }\n\n        case CART_LOADING:\n            return {\n                ...state, \n                loading: true\n            }\n\n        default:\n            return state;\n    }\n}","import { GET_ORDERS, CHECKOUT, ORDERS_LOADING } from '../actions/types';\n\nconst initialState = {\n    orders: [],\n    loading: false\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_ORDERS:\n            return{\n                ...state,\n                orders: action.payload,\n                loading: false\n            }\n\n        case CHECKOUT:\n            return{\n                ...state,\n                orders: [action.payload, ...state.orders]\n            }\n\n        case ORDERS_LOADING:\n            return{\n                ...state,\n                loading: true\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport cartReducer from './cartReducer';\nimport orderReducer from './orderReducer';\n\nexport default combineReducers({\n    item: itemReducer,\n    error: errorReducer,\n    auth: authReducer,\n    cart: cartReducer,\n    order: orderReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleWare),\n\n));\n\nexport default store;","import { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from './components/Main';\nimport store from './store';\nimport {loadUser} from './actions/authActions';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n  componentDidMount(){\n    store.dispatch(loadUser());\n  }\n  render(){\n    return ( \n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main/>\n          </div> \n        </BrowserRouter>\n        </Provider> \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}